{"version":3,"sources":["webpack:///./src/pages/reflection-on-our-open-data.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-format/src/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js"],"names":["require","LessonsLearn","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","css","_ref","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","_components_textbox__WEBPACK_IMPORTED_MODULE_2__","_ref2","_ref3","variables","join","_ref4","_components_external_link__WEBPACK_IMPORTED_MODULE_3__","name","url","_credit__WEBPACK_IMPORTED_MODULE_5__","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","formatDecimal","x","p","i","toExponential","indexOf","coefficient","slice","length","src_exponent","Math","abs","NaN","re","formatSpecifier","specifier","FormatSpecifier","exec","Error","fill","align","sign","symbol","zero","width","comma","precision","trim","type","toString","max","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","s","out","i1","n","i0","formatRounded","d","exponent","Array","formatTypes","%","toFixed","b","round","c","g","toPrecision","o","r","min","floor","X","toUpperCase","identity","prefixes","locale","grouping","thousands","group","value","t","j","push","substring","reverse","currency","decimal","numerals","replace","formatNumerals","percent","newFormat","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","padding","formatPrefix","k","pow","src_locale","precisionFixed","step","precisionPrefix","precisionRound","__webpack_exports__","global","inheritIfRequired","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","undefined","constructor","source","call","proxy","key","set","it","keys"],"mappings":"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","file":"component---src-pages-reflection-on-our-open-data-js-f898cd62ce4a941d54bc.js","sourcesContent":["import React from \"react\"\n\nimport TextBox from \"../components/textbox\"\n\nimport ExternalLink from \"../components/external-link\"\nimport * as variables from \"../shared/variables\"\nimport CreditPage from \"./credit\"\nimport SEO from \"../components/seo\"\n\nrequire('typeface-kanit')\n\nconst LessonsLearn = () => {\n    return <div css={{ padding: \"10px\" }}>\n        <SEO title=\"อุปสรรคในการทำงานและการเข้าถึง “ข้อมูลเปิดภาครัฐ” (Open Government Data)\"/>\n        <TextBox>\n            <h1 css={{\n                    paddingTop: \"20vh\",\n                }}\n            >โจทย์หิน “ข้อมูลเปิดภาครัฐ” ใช้ไม่ได้จริง !?</h1>\n            <div css={{fontSize: \"0.8em\"}}>\n                <b>เขียนโดย: </b>{variables.teamMembers.join(', ')}\n                <div css={{marginTop: \"5px\"}}>\n                    <b>วันที่: </b>{variables.date}\n                </div>\n            </div>\n            <br/>\n            <p>\n            จากการเปิดเผยและวิเคราะห์ข้อมูลเปิดภาครัฐ หัวข้อ \"ขุมทรัพย์ 6 แสนล้าน และรอยรั่วงบประมาณท้องถิ่น!?\" เพื่อเป็นข้อมูลให้ผู้มีสิทธิเลือกตั้งท้องถิ่นทั่วประเทศได้รับรู้ร่วมกัน โดยทีมนักข่าวกลุ่มการเมือง “ชมรมทีดีเจ” หรือ ชมรมเครือข่ายนักสื่อสารข้อมูลเชิงลึกแห่งประเทศไทย (Thailand Data Journalism Network (TDJ) และทีมผู้พัฒนาระบบ (Developer) \n            </p>\n            <p>\n            ทั้งนี้ ผลงานข้างต้นเกิดขึ้นมาจากการทำงานร่วมกันระหว่างผู้สื่อข่าวและผู้พัฒนาระบบ (Developer) หรือนักคอมพิวเตอร์สาขาต่าง ๆ เป็นระยะเวลากว่า 3 เดือน โดยระหว่างการทำงานนั้น ได้พบอุปสรรคในการเข้าถึง <b>ข้อมูลเปิดภาครัฐ (Open Government Data)</b> ในหน่วยงานภาครัฐของไทยหลายประการ ทั้งที่รัฐบาลประกาศส่งเสริมให้ประชาชนนำข้อมูลที่หน่วยงานรัฐจัดเก็บไปใช้สร้างสรรค์นวัตกรรมทางเศรษฐกิจและสังคม\n            </p>\n            <p>\n            ในระหว่างการทำงาน ทางเราได้พบอุปสรรคในหลายๆ ด้าน ซึ่งกระบวนการที่มีปัญหามากที่สุดคือ การได้มาซึ่งข้อมูลเพื่อเอาไปใช้ประกอบการวิเคราะห์ ตัวอย่างเช่น ในการขอ \n            “ข้อมูลรายชื่อนายกองค์กรปกครองส่วนท้องถิ่นย้อนหลัง 10 ปี” จากกรมส่งเสริมการปกครองท้องถิ่น \n            เราต้องทำหนังสือขอความอนุเคราะห์ข้อมูลรายชื่อนายกและสมาชิกสภาองค์กรปกครองส่วนท้องถิ่น และจัดส่งไปทางไปรษณีย์ถึงหน่วยงาน ภายหลังนั้นได้รับการอนุเคราะห์จากเจ้าหน้าที่กองการเลือกตั้ง \n            กรมส่งเสริมการปกครองท้องถิ่น ส่งรายชื่อนายกองค์กรปกครองส่วนท้องถิ่น ในรูปแบบไฟล์ Spreadsheet (Excel) ทางอีเมล แต่ได้สูงสุดเพียง 1 ปี ซึ่งเจ้าหน้าที่ได้ให้เหตุผลว่า \n            เนื่องจากระบบคอมพิวเตอร์ของหน่วยงานประมวลผลช้า อีกทั้งเป็นข้อมูลส่วนบุคคล ซึ่งทางเราได้ตั้งข้อสังเกตว่า “รายชื่อนายกองค์กรปกครองส่วนท้องถิ่น” ไม่ควรถือเป็นข้อมูลความลับทางราชการ หรือข้อมูลส่วนบุคคลที่จำเป็นต้องปกปิดแต่อย่างใด\n            </p>\n            <p>\n            นอกจากนี้เรายังมีการทำหนังสือเอกสารขอชุดข้อมูลเกี่ยวกับ “รายได้รวมขององค์กรปกครองส่วนท้องถิ่น” จากกรมส่งเสริมการปกครองท้องถิ่น เพื่อนำมาประมวลผล โดยฉบับแรกลงวันที่ 15 กรกฎาคม 2562 ส่งทางไปรษณีย์ลงทะเบียน ฉบับที่สองลงวันที่ 23 สิงหาคม 2562 แต่ปรากฎว่าไม่มีการตอบรับจากหน่วยงานที่เกี่ยวข้อง\n            </p>\n            <p>\n            ทางเราได้ลองสืบค้นข้อมูลเปิดที่เกี่ยวข้องกับการทุจริตในองค์กรปกครองท้องถิ่น \n            ปรากฎว่า<ExternalLink name=\"เว็บไซต์คณะกรรมการป้องกันและปราบปรามการทุจริตแห่งชาติ (ป.ป.ช.)\" url=\"https://www.nacc.go.th/culpability.php\"/> \n            ไม่ได้มีการแสดงผล หรือมีช่องสืบค้นการตรวจสอบองค์กรปกครองส่วนท้องถิ่น (อปท.) โดยเฉพาะ ทำให้ยากต่อการเข้าถึงและสืบค้นข้อมูลฐานความผิดหน่วยงาน อปท. ที่ได้รับการตรวจสอบทั่วประเทศ โดยเฉพาะในคดีที่เกิดขึ้นย้อนหลังหรือในปีล่าสุด เพื่อนำมาแสดงให้เห็นว่ามีบุคคลหรือหน่วยงาน อปท. ใดที่เกี่ยวข้องกับการทุจริต และมีความผิดมูลฐานใดบ้าง\n            </p>\n            <p>\n            ในการสืบค้นฐานข้อมูลจาก<ExternalLink url=\"https://www.audit.go.th/th/inspection-results\" name=\"เว็บไซต์สำนักงานการตรวจเงินแผ่นดิน (สตง.)\"/> และ<ExternalLink name=\"เว็บไซต์สำนักงานคณะกรรมการป้องกันและปราบปรามการทุจริตในภาครัฐ (ป.ป.ท.)\" url=\"http://www.pacc.go.th/index.php/result/annual\"/> เพื่อนำมาตรวจสอบนั้น เราไม่สามารถค้นพบข้อมูลที่เกี่ยวข้องกับการตรวจสอบและชี้มูลความผิดของคดีย้อนหลังหรือคดีล่าสุดของแต่ละอปท.ได้\n            </p>\n\n            <p>\n            ทั้งนี้ เมื่อตรวจสอบไปที่กฎหมาย 2 ฉบับ ได้แก่ พระราชบัญญัติ (พ.ร.บ.) ประกอบรัฐธรรมนูญว่าด้วยการป้องกันและปราบปรามการทุจริต พ.ศ. 2561 และพ.ร.บ.ประกอบรัฐธรรมนูญว่าด้วยการตรวจเงินแผ่นดิน พ.ศ. 2561 พบปัญหาในการเปิดเผยข้อมูล ข้อเท็จจริงเบื้องต้น หรือที่อยู่ระหว่างการตรวจสอบที่ปิดกั้นการทำงานเชิงตรวจสอบของภาคประชาชนและสื่อ รวมทั้งความร่วมมือในองค์กรอิสระ ซึ่งเปรียบเสมือน “กฎหมายปิดปาก” ตัดตอนความร่วมมือในการป้องปรามทุจริตระหว่างภาครัฐกับประชาชนหรือสื่อมวลชน   ได้แก่  <b>มาตรา 180</b> ใน พ.ร.บ. ประกอบรัฐธรรมนูญว่าด้วยการป้องกันและปราบปรามการทุจริต พ.ศ. 2561 ที่ระบุว่า <b>ผู้ใดเปิดเผยข้อความ ข้อเท็จจริง หรือข้อมูลที่คณะกรรมการ ป.ป.ช. หรือพนักงานเจ้าหน้าที่ได้มาเนื่องจากการปฏิบัติหน้าที่ตามพระราชบัญญัติประกอบรัฐธรรมนูญนี้ ต้องระวางโทษจําคุกไม่เกินหนึ่งปี หรือปรับไม่เกินสองหมื่นบาท หรือทั้งจําทั้งปรับ</b>\n            </p>\n            <p>\n            เช่นเดียวกับความที่ปรากฎในพระราชบัญญัติประกอบรัฐธรรมนูญว่าด้วยการตรวจเงินแผ่นดิน  พ.ศ. 2561 <b>มาตรา 104</b> ที่ระบุว่า <b>ผู้ใดเปิดเผยข้อความ ข้อเท็จจริงหรือข้อมูลที่ได้มาเนื่องจากการปฏิบัติหน้าที่ตามพระราชบัญญัติประกอบรัฐธรรมนูญนี้ต้องระวางโทษจําคุกไม่เกินหกเดือน หรือปรับไม่เกินหนึ่งหมื่นบาท หรือทั้งจําทั้งปรับ</b>\n\n            </p>\n            <p>\n            ความในวรรคหนึ่งไม่ใช้บังคับแก่การเปิดเผยสรุปผลการตรวจสอบที่เสร็จสิ้นแล้วโดยไม่ระบุชื่อบุคคลที่เกี่ยวข้อง หรือเป็นการเปิดเผยตามมาตรา 56 หรือเป็นการเปิดเผยต่อศาล พนักงานอัยการ หรือหน่วยงานที่ต้องดําเนินการตามผลการตรวจสอบของสํานักงาน หรือตามคําวินิจฉัยของคณะกรรมการตามพระราชบัญญัติประกอบรัฐธรรมนูญนี้ หรือเป็นการกระทําตามหน้าที่ราชการ\n            </p>\n\n            <p>\n            การสืบค้นชุดข้อมูลสำคัญเพื่อนำมาเปิดเผยให้ประชาชนผู้มีสิทธิเลือกตั้งรับรู้ ก่อนที่จะมีการเลือกตั้งระดับท้องถิ่นทั่วประเทศ เช่น ข้อมูลการจัดซื้อจัดจ้าง รายได้รายจ่ายของ อปท. เต็มไปด้วยปัญหาและอุปสรรคนานัปการนั้น สะท้อนให้เห็นว่านโยบายของภาครัฐ ที่พยายามพลักดันให้สำนักงานรัฐบาลอิเล็กทรอนิกส์ จัดทำรายการชุดข้อมูลและเปิดเผยสู่สาธารณะ เพื่อสนับสนุนการต่อต้านการทุจริต ตามหลักคิดเรื่อง Open Government Data ยังไม่ประสบความสำเร็จเท่าที่ควร\n\n            </p>\n            <p>\n                เมื่อมองภาพรวมของประเทศแล้ว ประเทศไทยมีปัญหาเรื่อง \"ภาพลักษณ์การคอร์รัปชันในหน่วยงานภาครัฐ\" โดยเมื่อปี 2560 ก็ถูกจัดอันดับความโปร่งใสลงจากอันดับที่ 96 ในปี 2561 ร่วงลงไปอยู่อันดับที่ 99 ต่ำกว่าทั้งประเทศสิงคโปร์และมาเลเซีย ซึ่งเป็นเรื่องที่ประชาชนและหลายหน่วยงานต้องช่วยกันแก้ไขปัญหา โดยเฉพาะการเข้ามาช่วยตรวจสอบการทำงาน หรือการใช้งบประมาณด้านต่าง ๆ และการที่ประชาชนจะเข้ามีส่วนร่วมดังกล่าวได้นั้น ต้องมีการเปิดเผยข้อมูลจากหน่วยงานต่าง  ๆ โดยเราขอสรุปปัญหาและอุปสรรคเรื่องข้อมูล 4 ประการ คือ  \n            </p>\n            <ol>\n                <li>\n                <b>ปัญหาข้อมูลไม่สมบูรณ์และทันสมัย</b> เช่น <ExternalLink name=\"เว็บไซต์กรมส่งเสริมการปกครองส่วนท้องถิ่น\" url=\"http://www.dla.go.th/index.jsp\"/> ในส่วนการเงินการคลังท้องถิ่นไม่มีข้อมูลเรื่องรายจ่ายของ อปท. พบแค่ข้อมูลการจัดสรรเงินอุดหนุน, เงินภาษี และข้อมูลรายได้ ซึ่งอัปเดตล่าสุดเป็นของปี 2560  \nอย่างไรก็ตาม เมื่อตรวจสอบเข้าไปในส่วน<ExternalLink name=\"ระบบข้อมูลกลางเว็บ อปท. ปีงบประมาณ: 2561\" url=\"http://info.dla.go.th/public/surveyStat.do\"/> พบว่า หน่วยงาน อปท. หลายแห่งไม่มีข้อมูลรายรับ–รายจ่าย บางแห่งมีข้อมูลเพียงจำนวนงบประมาณของโครงการที่ได้รับอนุมัติ และไม่ได้ลงรายละเอียดอื่น ๆ เช่น “หมวดรายได้”  ไม่ได้กรอกตัวเลขรายได้จากค่าภาษีอากร, ค่าธรรมเนียม, รายได้จากทรัพย์สิน, รายได้จากสาธารณูปโภคและการพาณิชย์, รายได้เบ็ดเตล็ด, เงินอุดหนุนทั่วไป, เงินอุดหนุนเฉพาะกิจ, เงินกู้, รายรับอื่นๆ, บัญชีเงินสะสม ฯลฯ ส่วน “หมวดรายจ่าย” ก็ไม่มีการแจกแจงในส่วนที่เกี่ยวข้องกับ หมวดรายจ่ายงบกลาง, รายจ่ายประจำ, รายจ่ายเพื่อการลงทุน ฯลฯ ทั้งที่เป็นข้อมูลสำคัญ\n                </li>\n                <li>\n                <b>รูปแบบการจัดเก็บข้อมูล</b> ไม่อำนวยความสะดวกต่อการนำมาใช้วิเคราะห์ประมวลผลด้วยโปรแกรมคอมพิวเตอร์ เช่น จัดเก็บเป็นไฟล์ PDF รวมถึงการจัดเก็บข้อมูลไม่เป็นไปในมาตรฐานเดียวกัน ทำให้ไม่สามารถนำข้อมูลเหล่านั้นมาใช้งานได้จริง\n                </li>\n                <li>\n                <b>ข้อมูลกระจัดกระจายและขาดการเชื่อมโยงฐานข้อมูลของหน่วยงานภาครัฐ</b> เช่น ในเว็บ อปท. มีไฟล์ข้อมูลทั้งส่วนที่เป็นรายชื่อ อปท., เงินอุดหนุน, ขนาด, ที่ตั้ง, พื้นที่, ประชากร, เว็บไซต์ของ อปท. แต่ไม่มีการเชื่อมโยงข้อมูลให้เชื่อมต่อกัน ต้องไล่ตรวจสอบ หรือค้นทีละส่วน หรือต้องไล่เช็กโดยค้นจาก Google เพราะในหน้าเว็บก็ดูค่อนข้างยาก    \nนอกจากนี้ เว็บไซต์ระหว่างหน่วยงาน เช่น <ExternalLink name=\"ข้อมูลเว็บไซต์สำนักงานการตรวจเงินแผ่นดิน (สตง.)\" url=\"https://www.audit.go.th/th/inspection-results\"/> และ<ExternalLink name=\"เว็บไซต์สำนักงานคณะกรรมการป้องกันและปราบปรามการทุจริตในภาครัฐ (ป.ป.ท.)\" url=\"http://www.pacc.go.th/index.php/result/annual\"/> ที่เกี่ยวกับการร้องเรียนเรื่อง อปท. ก็ไม่ได้มีการเชื่อมโยงถึงกัน ทำให้ประชาชนทั่วไปเข้าถึงข้อมูลได้ยาก \n                </li>\n                <li>\n                ปัญหาอื่น ๆ เช่น <b>เรื่องศัพท์เทคนิค</b> หรือเงื่อนไขรูปแบบการจัดซื้อจัดจ้าง ก็เป็นเรื่องที่ประชาชนทั่วไปยังไม่ค่อยเข้าใจในรายละเอียดข้อมูลและความหมาย รวมถึงอาจจะมีช่องโหว่ของกฎหมายที่ทำให้เกิดการหลีกเลี่ยงการตรวจสอบได้ \n                </li>\n            </ol>\n            <p>\n            จากปัญหาดังกล่าวนั้น เราเห็นว่าชุดข้อมูลที่มีในปัจจุบัน ยังไม่สามารถเอามาใช้ประกอบ หรืออ้างอิงการตรวจสอบ หรือชี้ชัดได้ว่าโครงการไหนมีพิรุธในการทุจริตได้อย่างเป็นรูปธรรม และเป็นเรื่องที่<b>หน่วยงานภาครัฐต้องมาให้ความสำคัญและจริงจังกับ พ.ร.บ. การบริหารงานและการให้บริการภาครัฐผ่านระบบดิจิทัล พ.ศ. 2562 </b>หรือ พ.ร.บ.รัฐบาลดิจิทัล เพื่อจะได้ผลักดันให้เกิดการเปิดเผยข้อมูลที่สู่สาธารณะ ทุกคนเข้าถึงข้อมูลได้อย่างแท้จริง\n            </p>\n            <p>\n            ในส่วนของการดึงข้อมูลจาก<ExternalLink name=\"เว็บไซต์ “ภาษีไปไหน” ของสำนักงานพัฒนารัฐบาลดิจิทัล\" url=\"https://govspending.data.go.th\"/> และ<ExternalLink name=\"เว็บไซต์ระบบคลังข้อมูลธุรกิจ ของกรมพัฒนาธุรกิจการค้า กระทรวงพาณิชย์\" url=\"https://datawarehouse.dbd.go.th\"/> นั้นทำได้ค่อนข้างยากและล่าช้า เนื่องจากปัญหาเชิงเทคนิคของทางเว็บไซต์ ซึ่งทำให้การนำข้อมูลย้อนหลังมาวิเคราะห์ทางสถิติ หรือหาความเชื่อมโยงของข้อมูลจึงทำได้ค่อนข้างยากและใช้เวลานาน ซึ่งก็ถือเป็นอีกโจทย์สำคัญของการทำ Open Data ของประเทศไทย ที่<b>ภาครัฐเองจะต้องยกระดับมาตรฐานเว็บไซต์ของแต่ละหน่วยงาน ให้เอื้อต่อการค้นหาและเข้าถึงข้อมูลของบุคคลทั่วไปที่สนใจ</b> เราเชื่อว่าสิ่งนี้เป็นสิ่งเหล่านี้เป็นเรื่องสำคัญที่จะช่วยบูรณาการให้การใช้ข้อมูลเปิดภาครัฐเป็นรูปธรรมมากยิ่งขึ้น\n            </p>\n            <p><ExternalLink name=\"รายละเอียดทางด้านเทคนิคสำหรับการดึงข้อมูล\" url=\"https://github.com/heytitle/data-preparation-for-administrative-budget-and-projects\"/></p>\n        </TextBox>\n        <TextBox>\n            <CreditPage/>\n        </TextBox>\n    </div>\n}\n\n\nexport default LessonsLearn","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export {default as formatDefaultLocale, format, formatPrefix} from \"./defaultLocale\";\nexport {default as formatLocale} from \"./locale\";\nexport {default as formatSpecifier} from \"./formatSpecifier\";\nexport {default as precisionFixed} from \"./precisionFixed\";\nexport {default as precisionPrefix} from \"./precisionPrefix\";\nexport {default as precisionRound} from \"./precisionRound\";\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n"],"sourceRoot":""}